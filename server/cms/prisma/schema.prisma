generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model drink {
  id            Int          @id @unique(map: "id") @default(autoincrement())
  volume        Int
  product_id    Int?
  drink_type_id Int?
  tbl_product   tbl_product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_drink")

  @@index([drink_type_id], map: "FK_drink_type_drink")
  @@index([product_id], map: "FK_product_drink")
  @@map("tbl_drink")
}

model drink_type {
  id   Int    @id @unique(map: "id") @default(autoincrement())
  name String @db.VarChar(50)

  @@map("tbl_drink_type")
}

model ingredient {
  id               Int                @id @unique(map: "id") @default(autoincrement())
  name             String             @db.VarChar(30)
  pizza_ingredient pizza_ingredient[]

  @@map("tbl_ingrendient")
}

model like_product {
  id          Int          @id @unique(map: "id") @default(autoincrement())
  likes       Int?
  product_id  Int?
  tbl_product tbl_product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_like")

  @@index([product_id], map: "FK_product_like")
  @@map("tbl_product_likes")
}

model message {
  id        Int     @id @unique(map: "id") @default(autoincrement())
  name      String  @db.VarChar(256)
  email     String  @db.VarChar(256)
  phone     String  @db.VarChar(13)
  cellphone String  @db.VarChar(15)
  critica   Boolean
  content   String  @db.Text

  @@map("tbl_message")
}

model picture {
  id                   Int                    @id @unique(map: "id") @default(autoincrement())
  picture_link         String?                @db.VarChar(256)
  tbl_product_pictures tbl_product_pictures[]

  @@map("tbl_picture")
}

model pizza {
  id               Int                @id @unique(map: "id") @default(autoincrement())
  product_id       Int?
  pizza_type_id    Int?
  pizza_type       pizza_type?        @relation(fields: [pizza_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_pizza_type_pizza")
  tbl_product      tbl_product?       @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_pizza")
  pizza_ingredient pizza_ingredient[]
  pizza_stuffing   pizza_stuffing[]

  @@index([pizza_type_id], map: "FK_pizza_type_pizza")
  @@index([product_id], map: "FK_product_pizza")
  @@map("tbl_pizza")
}

model pizza_ingredient {
  id            Int         @id @unique(map: "id") @default(autoincrement())
  ingredient_id Int?
  pizza_id      Int?
  ingredient    ingredient? @relation(fields: [ingredient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ingredient_pizza_ingredient")
  pizza         pizza?      @relation(fields: [pizza_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_pizza_pizza_ingredient")

  @@index([ingredient_id], map: "FK_ingredient_pizza_ingredient")
  @@index([pizza_id], map: "FK_pizza_pizza_ingredient")
  @@map("tbl_pizza_ingredient")
}

model pizza_stuffing {
  id          Int       @id @unique(map: "id") @default(autoincrement())
  pizza_id    Int?
  stuffing_id Int?
  pizza       pizza?    @relation(fields: [pizza_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_pizza_pizza_stugging")
  stuffing    stuffing? @relation(fields: [stuffing_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_stuffing_pizza_stugging")

  @@index([pizza_id], map: "FK_pizza_pizza_stugging")
  @@index([stuffing_id], map: "FK_stuffing_pizza_stugging")
  @@map("tbl_pizza_stuffing")
}

model pizza_type {
  id         Int     @id @unique(map: "id") @default(autoincrement())
  name       String  @db.VarChar(50)
  dimensions String  @db.VarChar(20)
  pizza      pizza[]

  @@map("tbl_pizza_type")
}

model tbl_product {
  id                   Int                    @id @unique(map: "id") @default(autoincrement())
  name                 String?                @db.VarChar(256)
  price                Decimal                @db.Decimal(10, 2)
  created_by           Int
  status_id            Int?
  tbl_product_status   tbl_product_status?    @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_status_product")
  user                 user                   @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_user_product")
  drink                drink[]
  pizza                pizza[]
  like_product         like_product[]
  tbl_product_pictures tbl_product_pictures[]
  sale_off_products    sale_off_products[]

  @@index([status_id], map: "FK_status_product")
  @@index([created_by], map: "FK_user_product")
}

model tbl_product_pictures {
  id          Int          @id @default(autoincrement())
  product_id  Int?
  picture_id  Int?
  picture     picture?     @relation(fields: [picture_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_picture_product_pictures")
  tbl_product tbl_product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_product_pictures")

  @@index([picture_id], map: "FK_picture_product_pictures")
  @@index([product_id], map: "FK_product_product_pictures")
}

model tbl_product_status {
  id          Int           @id @unique(map: "id") @default(autoincrement())
  updated_by  Int
  updated_at  DateTime?     @default(now()) @db.DateTime(0)
  tbl_product tbl_product[]
}

model sale_off {
  id                Int                 @id @unique(map: "id") @default(autoincrement())
  off_value         Decimal?            @db.Decimal(10, 2)
  sale_off_products sale_off_products[]

  @@map("tbl_sale_off")
}

model sale_off_products {
  id          Int          @id @unique(map: "id") @default(autoincrement())
  product_id  Int?
  sale_off_id Int?
  tbl_product tbl_product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_product_sale_off_products")
  sale_off    sale_off?    @relation(fields: [sale_off_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_sale_off_sale_off_products")

  @@index([product_id], map: "FK_product_sale_off_products")
  @@index([sale_off_id], map: "FK_sale_off_sale_off_products")
  @@map("tbl_sale_off_products")
}

model stuffing {
  id             Int              @id @unique(map: "id") @default(autoincrement())
  name           String?          @db.VarChar(256)
  pizza_stuffing pizza_stuffing[]

  @@map("tbl_stuffing")
}

model user {
  id              Int           @id @default(autoincrement())
  name            String        @db.VarChar(256)
  email           String        @db.VarChar(256)
  phone           String        @db.VarChar(13)
  cellphone       String        @db.VarChar(15)
  profile_picture String?       @db.VarChar(256)
  password        String        @db.VarChar(256)
  isAdmin         Boolean
  tbl_product     tbl_product[]

  @@unique([email, id], map: "email")
  @@map("tbl_user")
}
